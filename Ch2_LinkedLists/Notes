07/28/2014

Singly Linked List:
    Add a node == append a node to the tail
    Pseudo code:
        Node end = new Node(data);
        Node n = this;
        while (n.next != null) n = n.next;
        n.next = end

    Print the list: the trick is to print the tail node
    Pseudo code:
        int index = 0
        while (current.next != null)
        {
            index = index + 1;
            print current node;
            current = current.next;
        }
        if (current.next == null) 
        // include the cases of both one-node list and ending node 
        {
            index = index + 1;
            print current node;
        }

    Delete a node: Two cases-1. remove the head 2. remove not the head

    Java manipulates objectts by references, but it passes object references to methods
    by value (just copies). As a result, you cannot write a standard swap method to swap 
    objects. For a swap to succeed outside of the method call, we need to swap the original
    references, not the copies.
    Ref:
    http://www.javaworld.com/article/2077424/learn-java/does-java-pass-by-reference-or-pass-by-value.html


